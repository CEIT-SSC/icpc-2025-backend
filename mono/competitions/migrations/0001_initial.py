# Generated by Django 5.2.6 on 2025-09-25 11:26

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Competition',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('slug', models.SlugField(blank=True, max_length=220, unique=True)),
                ('description', models.TextField(blank=True)),
                ('min_team_size', models.PositiveSmallIntegerField(default=1)),
                ('max_team_size', models.PositiveSmallIntegerField(default=1)),
                ('signup_fee', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('currency', models.CharField(default='USD', max_length=8)),
                ('requires_backoffice_approval', models.BooleanField(default=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='CompetitionFieldConfig',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(choices=[('REQ', 'Required'), ('OPT', 'Optional'), ('HID', 'Hidden')], default='REQ', max_length=3)),
                ('last_name', models.CharField(choices=[('REQ', 'Required'), ('OPT', 'Optional'), ('HID', 'Hidden')], default='REQ', max_length=3)),
                ('national_id', models.CharField(choices=[('REQ', 'Required'), ('OPT', 'Optional'), ('HID', 'Hidden')], default='OPT', max_length=3)),
                ('student_card_image', models.CharField(choices=[('REQ', 'Required'), ('OPT', 'Optional'), ('HID', 'Hidden')], default='OPT', max_length=3)),
                ('national_id_image', models.CharField(choices=[('REQ', 'Required'), ('OPT', 'Optional'), ('HID', 'Hidden')], default='OPT', max_length=3)),
                ('tshirt_size', models.CharField(choices=[('REQ', 'Required'), ('OPT', 'Optional'), ('HID', 'Hidden')], default='OPT', max_length=3)),
                ('phone_number', models.CharField(choices=[('REQ', 'Required'), ('OPT', 'Optional'), ('HID', 'Hidden')], default='REQ', max_length=3)),
                ('email', models.CharField(choices=[('REQ', 'Required'), ('OPT', 'Optional'), ('HID', 'Hidden')], default='REQ', max_length=3)),
                ('competition', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='field_config', to='competitions.competition')),
            ],
        ),
        migrations.CreateModel(
            name='TeamRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('team_name', models.CharField(blank=True, max_length=120)),
                ('status', models.CharField(choices=[('PENDING_APPROVAL', "Pending – awaiting members' email approvals"), ('PENDING_INVESTIGATION', 'Pending – backoffice investigation'), ('PENDING_PAYMENT', 'Pending payment'), ('FINAL', 'Finalized'), ('PAYMENT_REJECTED', 'Payment rejected'), ('REJECTED', 'Rejected'), ('CANCELLED', 'Cancelled by submitter')], default='PENDING_APPROVAL', max_length=24)),
                ('payment_link', models.URLField(blank=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('competition', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='team_requests', to='competitions.competition')),
                ('submitter', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='submitted_team_requests', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='TeamMember',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=150)),
                ('last_name', models.CharField(max_length=150)),
                ('email', models.EmailField(max_length=254)),
                ('phone_number', models.CharField(max_length=30)),
                ('national_id', models.CharField(blank=True, max_length=50)),
                ('student_card_image', models.URLField(blank=True)),
                ('national_id_image', models.URLField(blank=True)),
                ('tshirt_size', models.CharField(blank=True, max_length=10)),
                ('approval_status', models.CharField(choices=[('PENDING', 'Pending'), ('APPROVED', 'Approved'), ('REJECTED', 'Rejected')], default='PENDING', max_length=10)),
                ('approval_token_hash', models.CharField(blank=True, max_length=64)),
                ('approval_token_expires_at', models.DateTimeField(blank=True, null=True)),
                ('approval_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='competition_memberships', to=settings.AUTH_USER_MODEL)),
                ('request', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='members', to='competitions.teamrequest')),
            ],
        ),
        migrations.AddIndex(
            model_name='teamrequest',
            index=models.Index(fields=['competition', 'status'], name='competition_competi_1a2b9c_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='teammember',
            unique_together={('request', 'email')},
        ),
    ]
